<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Smart-Contract on @adlrocha</title>
    <link>/tags/smart-contract/</link>
    <description>Recent content in Smart-Contract on @adlrocha</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Jul 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/smart-contract/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reducing the size of Solidity contracts</title>
      <link>/til/2023-07-10-solidity-contract-size/</link>
      <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate>
      <guid>/til/2023-07-10-solidity-contract-size/</guid>
      <description>&lt;h1 id=&#34;reducing-the-size-of-solidity-contracts&#34;&gt;Reducing the size of Solidity contracts&lt;/h1&gt;&#xA;&lt;p&gt;I am currently working on a project that we call &lt;a href=&#34;https://ipc.space/&#34;&gt;IPC (InterPlanetary Consensus)&lt;/a&gt;. We are now implementing the core logic of the protocol in a set of Solidity contracts. Unfortunately, the implementation of one of the contracts of the protocol, the &lt;code&gt;Gateway&lt;/code&gt;, was too large to be deployed (over the &lt;code&gt;24KB&lt;/code&gt; limit), so we had to figure out ways to reduce its size. &lt;a href=&#34;https://ethereum.org/en/developers/tutorials/downsizing-contracts-to-fight-the-contract-size-limit/&#34;&gt;This post&lt;/a&gt;, is a great introduction of the different approaches to fight the contract size limit. In this quick write-up I will share chronologically how we leveraged each of these approaches to try and make our contract &lt;em&gt;&amp;ldquo;deployable&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
