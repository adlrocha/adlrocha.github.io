<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on @adlrocha</title>
    <link>/tags/programming/</link>
    <description>Recent content in programming on @adlrocha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Remember `to(&#39;cpu&#39;)` in Pytorch to release GPU memory</title>
      <link>/til/2024-01-11-pytorch-collab-to-cpu/</link>
      <pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/til/2024-01-11-pytorch-collab-to-cpu/</guid>
      <description>Remember to(&#39;cpu&#39;) in Pytorch to release GPU memory When I saw that Microsoft had released phi-2, a 2.7B parameters LLM, I thought: &amp;ldquo;this is the perfect excuse to get my hands dirty with LLMs&amp;rdquo;. The model was small enough to test it directly inside Google Colab, as it would fit the 15GiB memory GPUs provided in the free plan.
So without further ado, I opened Google Colab, pip installed HF&amp;rsquo;s transformers library, and wrote the following code snippet to test the model:</description>
    </item>
    
    <item>
      <title>When should one use Rust&#39;s `Pin&lt;&gt;`?</title>
      <link>/til/2023-08-29-rust-pin/</link>
      <pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>/til/2023-08-29-rust-pin/</guid>
      <description>When should one use Rust&amp;rsquo;s Pin&amp;lt;&amp;gt;? The other day I was reviewing some code from the Fendermint project that I am currently contributing to, and I had to ask the author of the PR directly, &amp;ldquo;man! you have to teach me when I am supposed to use Pin&amp;lt;&amp;gt;. I see you are using it all over the place in this API, but I don&amp;rsquo;t know why&amp;rdquo;. His immediate answer was a bit surprising although kind of expected.</description>
    </item>
    
  </channel>
</rss>
